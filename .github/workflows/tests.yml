name: DQt tests

on:
  push:
    branches:
      - master
      - test
      - testqt6
  pull_request:
    branches:
      - master
      - test
      - testqt6

jobs:
  main:
    strategy:
      fail-fast: false

      matrix:
        platform: [ linux64, win64, osx64 ]
        dc: [ dmd-latest, dmd-2.100.0, ldc-latest, dmd-master ]
        qt_version: [ 6.2.3 ]

        include:
          - platform: linux64
            os: ubuntu-22.04
            model: 64
            qt_arch: gcc_64
            qt_platform: linux_x64/desktop

          - platform: win64
            os: windows-2022
            model: 64
            qt_arch: msvc2019_64
            qt_arch_url: win64_msvc2019_64
            qt_platform: windows_x86/desktop

          - platform: osx64
            os: macos-12
            model: 64
            qt_arch: macos
            qt_arch_url: clang_64
            qt_platform: mac_x64/desktop

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}

      - name: Checkout dxml
        uses: actions/checkout@v3
        with:
          path: dxml
          repository: jmdavis/dxml
          ref: v0.4.4
          persist-credentials: false

      - name: Update PATH
        if: ${{ matrix.os == 'windows-2022' }}
        run: |
          echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install libEGL
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
          sudo apt-get install -y libegl1

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v3
        with:
          path: qt-lib
          key: ${{ runner.os }}-qt-${{ matrix.qt_version }}-${{ matrix.qt_arch }}-${{ matrix.qt_arch_url }}-${{ matrix.qt_platform }}-${{ hashFiles('ci/downloadqt.d') }}

      - name: Install Qt
        if: ${{ steps.cache-qt.outputs.cache-hit != 'true' }}
        run: |
          ${{ env.DC }} -Idxml/source -i -run ci/downloadqt.d -v"${{ matrix.qt_version }}" -a${{ matrix.qt_arch }} -u${{ matrix.qt_arch_url }} -p${{ matrix.qt_platform }}

      - name: 'Build & Test'
        timeout-minutes: 5
        run: |
          ${{ env.DC }} -run runtests.d --github --compiler=${{ env.DC }} -m${{ matrix.model }} --qt-path=qt-lib/${{ matrix.qt_version }}/${{ matrix.qt_arch }} --dxml-path=dxml/source

#      - name: Upload test results
#        uses: actions/upload-artifact@v4
#        if: always()
#        with:
#          name: test_results-${{ matrix.platform }}-${{ matrix.dc }}
#          path: test_results
#          retention-days: 1
